[{"/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/index.js":"1","/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/Page1.js":"2","/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/Page3.js":"3","/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/Page2.js":"4","/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/components/Circle.js":"5","/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/components/Rectangle.js":"6","/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/components/info.js":"7","/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/components/trash.js":"8","/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/Page5.jsx":"9","/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/Page4.jsx":"10"},{"size":760,"mtime":1609232930054,"results":"11","hashOfConfig":"12"},{"size":387,"mtime":1609149370297,"results":"13","hashOfConfig":"12"},{"size":1915,"mtime":1609230399381,"results":"14","hashOfConfig":"12"},{"size":1316,"mtime":1609230399379,"results":"15","hashOfConfig":"12"},{"size":2724,"mtime":1609232257314,"results":"16","hashOfConfig":"12"},{"size":3906,"mtime":1609231928394,"results":"17","hashOfConfig":"12"},{"size":568,"mtime":1609052833517,"results":"18","hashOfConfig":"12"},{"size":735,"mtime":1609127855800,"results":"19","hashOfConfig":"12"},{"size":2684,"mtime":1609232926741,"results":"20","hashOfConfig":"12"},{"size":2352,"mtime":1609232921104,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lx6wsw",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/index.js",[],"/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/Page1.js",[],"/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/Page3.js",[],"/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/Page2.js",[],"/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/components/Circle.js",["45","46","47"],"import React, { useState } from 'react';\nimport { Container, Form, OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport { v4 } from 'uuid';\nimport Trash from '../components/trash.js';\nimport Info from '../components/info.js';\n\nconst initialNotes = []\n\nconst Circle = (props)=> {\n    const [notes, setNote] = React.useState(initialNotes);\n    const [text, setText] = React.useState('');\n\n    const [isShown, setIsShown] = useState(false);\n\n    function handleChange(event) {\n        setText(event.target.value);\n    }\n\n    function handleAdd(event) {\n        if (!text){\n            return;\n        }\n        const newList = notes.concat({ intext: text, id: v4()});\n        setNote(newList);\n     \n        setText('');\n    }\n\n\n    function Note(props) {\n        return (\n        <div \n            variant = 'light'\n            className='circle rounded-pill with-btn-delete' \n            onMouseEnter={() => setIsShown(true)}\n            onMouseLeave={() => setIsShown(false)}\n        >\n            <span className=\"intext\">\n                {props.intext}\n            </span>\n            {isShown && (\n                <span className=\"btn-delete-container\" onClick={() => props.deleteNote(props.id)}>\n                    <Trash />\n                </span>\n            )}\n        </div>\n        )\n    }\n\n\n    const deleteNote = (id) => {\n        setNote(notes.filter((note) => note.id !== id))\n    }\n\n    const handleKeyPress = (event) => {\n        if(event.key === 'Enter'){\n          if (!text){\n            return;\n        }\n\n        const newList = notes.concat({ intext: text, id: v4()});\n        setNote(newList);\n     \n        setText('');\n        }\n    }\n    \n    return ( \n        <>\n            <div className={props.id}>\n                <div className=\"circle-container\" style={{border: props.border}}>\n                    <span className=\"title-container\" style={{color: props.headingColor}}>\n                        {props.heading1}<br></br><strong>{props.heading2}</strong>\n                    </span>\n                    \n                    <div className=\"pills-location\">\n                        <Container className=\"pill-container\">\n                            {notes.map((element) => <Note key={element.id.toString()} intext={element.intext} id={element.id} deleteNote={deleteNote}></Note>)}\n                        </Container>\n\n                        <Container>\n                            <Form.Control className='form rounded-pill' value={text} onChange={handleChange} onBlur={handleAdd} onKeyPress={handleKeyPress} placeholder=\"Type here...\"/>\n                        </Container>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n \nexport default Circle; ",["48","49"],"/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/components/Rectangle.js",["50"],"import React, { useState } from 'react';\nimport { Container, Form, OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport {EditText, EditTextarea } from 'react-edit-text';\nimport { v4 } from 'uuid';\nimport Trash from '../components/trash.js';\nimport Info from '../components/info.js';\n\nconst initialNotes = []\n\nconst Rectangle = (props) => {\n    const [notes, setNote] = useState(initialNotes);\n    const [text, setText] = useState('');\n    const [isShown, setIsShown] = useState(false);\n\n    function handleChange(event) {\n        setText(event.target.value);\n    }\n\n    function handleAdd(event) {\n        if (!text){\n            return;\n        }\n        const newList = notes.concat({ intext: text, id: v4()});\n        setNote(newList);\n     \n        setText('');\n    }\n\n    const handleEdit = ({name, value}) => {\n        for (let i = 0; i < notes.length; i++){\n            if (name === notes[i].id){\n                notes[i].intext = value;\n            }\n        }\n    }\n\n    function Note(props) {\n\n        return (\n            <div \n                variant = 'light' \n                className='rounded-pill with-btn-delete' \n                onMouseEnter={() => setIsShown(true)}\n                onMouseLeave={() => setIsShown(false)}\n            >\n                {/* the intext's opacity is 0 as it's just place here to provide the correct spacing */}\n                <span className=\"intext\"> \n                    {props.intext}\n                </span>\n\n                <EditText\n                    name={props.id}\n                    className=\"edit-text\"\n                    value={props.intext}\n                    onSave={handleEdit}\n                />\n\n                {isShown && (\n                    <span className=\"btn-delete-container\" onClick={() => props.deleteNote(props.id)}>\n                        <Trash />\n                    </span>\n                )}\n            </div>\n        )\n    }\n\n    const deleteNote = (id) => {\n        setNote(notes.filter((note) => note.id !== id))\n    }\n\n    const handleKeyPress = (event) => {\n        if(event.key === 'Enter'){\n          if (!text){\n            return;\n        }\n\n        const newList = notes.concat({ intext: text, id: v4()});\n        setNote(newList);\n     \n        setText('');\n        }\n    }\n    \n    return ( \n        <>\n            <div className=\"rectangle-container text-center\" style = {{background: props.color}}>\n                <h3 className=\"dark-blue\" style = {{color: props.headingColor}}>\n                    {props.heading1}<br></br><strong>{props.heading2}</strong>\n                    <OverlayTrigger\n                        key=\"bottom\"\n                        placement=\"bottom\"\n                        overlay={\n                            <Tooltip id={`tooltip-bottom`}>\n                                <strong> What The World Needs</strong> <br /> Are you helping to solve an actual problem? <br /> Is what youâ€™re doing bringing beauty or utility to others, helping out, and shaping the world around you?\n                            </Tooltip>\n                        }\n                    >\n                        <span>\n                            <Info />\n                        </span>\n                    </OverlayTrigger>\n                </h3>\n\n                <Container className=\"pill-container\">\n                    {notes.map((element) => \n                        <>\n                            <Note key={element.id.toString()} intext={element.intext} id={element.id} deleteNote={deleteNote}></Note>\n                        </>\n                    )}\n                </Container>\n\n                <Container>\n                    <Form.Control className='form rounded-pill' value={text} onChange={handleChange} onBlur={handleAdd} onKeyPress={handleKeyPress} placeholder=\"Type here...\"/>\n                </Container>\n            </div>\n        </>\n    );\n}\n \nexport default Rectangle; ","/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/components/info.js",[],"/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/components/trash.js",[],"/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/Page5.jsx",["51","52","53","54"],"/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/Page4.jsx",["55","56","57","58"],{"ruleId":"59","severity":1,"message":"60","line":2,"column":27,"nodeType":"61","messageId":"62","endLine":2,"endColumn":41},{"ruleId":"59","severity":1,"message":"63","line":2,"column":43,"nodeType":"61","messageId":"62","endLine":2,"endColumn":50},{"ruleId":"59","severity":1,"message":"64","line":5,"column":8,"nodeType":"61","messageId":"62","endLine":5,"endColumn":12},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"59","severity":1,"message":"69","line":3,"column":19,"nodeType":"61","messageId":"62","endLine":3,"endColumn":31},{"ruleId":"59","severity":1,"message":"70","line":11,"column":7,"nodeType":"61","messageId":"62","endLine":11,"endColumn":11},{"ruleId":"59","severity":1,"message":"71","line":15,"column":7,"nodeType":"61","messageId":"62","endLine":15,"endColumn":11},{"ruleId":"59","severity":1,"message":"72","line":19,"column":7,"nodeType":"61","messageId":"62","endLine":19,"endColumn":11},{"ruleId":"59","severity":1,"message":"73","line":23,"column":7,"nodeType":"61","messageId":"62","endLine":23,"endColumn":11},{"ruleId":"59","severity":1,"message":"74","line":12,"column":7,"nodeType":"61","messageId":"62","endLine":12,"endColumn":12},{"ruleId":"59","severity":1,"message":"75","line":13,"column":7,"nodeType":"61","messageId":"62","endLine":13,"endColumn":12},{"ruleId":"59","severity":1,"message":"76","line":14,"column":7,"nodeType":"61","messageId":"62","endLine":14,"endColumn":12},{"ruleId":"59","severity":1,"message":"77","line":15,"column":7,"nodeType":"61","messageId":"62","endLine":15,"endColumn":12},"no-unused-vars","'OverlayTrigger' is defined but never used.","Identifier","unusedVar","'Tooltip' is defined but never used.","'Info' is defined but never used.","no-native-reassign",["78"],"no-negated-in-lhs",["79"],"'EditTextarea' is defined but never used.","'cir1' is assigned a value but never used.","'cir2' is assigned a value but never used.","'cir3' is assigned a value but never used.","'cir4' is assigned a value but never used.","'rect1' is assigned a value but never used.","'rect2' is assigned a value but never used.","'rect3' is assigned a value but never used.","'rect4' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]