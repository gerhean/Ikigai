[{"/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/index.js":"1","/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/Page2.js":"2","/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/Page1.js":"3","/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/Page3.js":"4","/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/components/Circle.js":"5","/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/components/Rectangle.js":"6","/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/components/info.js":"7","/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/components/trash.js":"8","/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/Page5.js":"9","/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/Page4.js":"10"},{"size":760,"mtime":1609248569346,"results":"11","hashOfConfig":"12"},{"size":1316,"mtime":1609230399379,"results":"13","hashOfConfig":"12"},{"size":387,"mtime":1609149370297,"results":"14","hashOfConfig":"12"},{"size":1915,"mtime":1609243439794,"results":"15","hashOfConfig":"12"},{"size":4664,"mtime":1609300004656,"results":"16","hashOfConfig":"12"},{"size":3919,"mtime":1609300004656,"results":"17","hashOfConfig":"12"},{"size":516,"mtime":1609246727431,"results":"18","hashOfConfig":"12"},{"size":732,"mtime":1609246727431,"results":"19","hashOfConfig":"12"},{"size":2684,"mtime":1609300004654,"results":"20","hashOfConfig":"12"},{"size":3010,"mtime":1609300004656,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"j8v5ht",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/index.js",[],["45","46"],"/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/Page2.js",[],"/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/Page1.js",[],"/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/Page3.js",[],"/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/components/Circle.js",["47","48","49","50","51","52","53","54","55","56","57"],"import React, { useState, useEffect } from 'react';\nimport { Container, Form, OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport {EditText } from 'react-edit-text';\nimport * as d3 from \"d3\";\nimport * as venn from \"venn.js\";\nimport { v4 } from 'uuid';\nimport Trash from '../components/trash.js';\nimport Info from '../components/info.js';\n\nconst initialNotes = []\n\nconst Circle = (props) => {\n    const [notes, setNote] = React.useState(initialNotes);\n    const [text, setText] = React.useState('');\n\n    const [isShown, setIsShown] = useState(false);\n\n    function handleChange(event) {\n        setText(event.target.value);\n    }\n\n    function handleAdd(event) {\n        if (!text){\n            return;\n        }\n        const newList = notes.concat({ intext: text, id: v4()});\n        setNote(newList);\n     \n        setText('');\n    }\n\n    const handleEdit = ({name, value}) => {\n        for (let i = 0; i < notes.length; i++){\n            if (name === notes[i].id){\n                notes[i].intext = value;\n            }\n        }\n    }\n\n    function Note(props) {\n        return (\n        <div \n            variant = 'light'\n            className='circle rounded-pill with-btn-delete' \n            onMouseEnter={() => setIsShown(true)}\n            onMouseLeave={() => setIsShown(false)}\n        >\n            <span className=\"intext\">\n                {props.intext}\n            </span>\n\n            <EditText\n                name={props.id}\n                className=\"edit-text\"\n                value={props.intext}\n                onSave={handleEdit}\n            />\n\n            {isShown && (\n                <span className=\"btn-delete-container\" onClick={() => props.deleteNote(props.id)}>\n                    <Trash />\n                </span>\n            )}\n        </div>\n        )\n    }\n\n\n    const deleteNote = (id) => {\n        setNote(notes.filter((note) => note.id !== id))\n    }\n\n    const handleKeyPress = (event) => {\n        if(event.key === 'Enter'){\n          if (!text){\n            return;\n        }\n\n        const newList = notes.concat({ intext: text, id: v4()});\n        setNote(newList);\n     \n        setText('');\n        }\n    }\n\n    const [sets, setSets] = useState([\n        { sets: [\"L\"], size: 1000, label: \"love\" },\n        { sets: [\"G\"], size: 1000, label: \"good\" },\n        { sets: [\"N\"], size: 1000, label: \"needs\" },\n        { sets: [\"P\"], size: 1000, label: \"paid\" },\n        { sets: [\"N\", \"P\"], size: 300, label: \"np\" },\n        { sets: [\"N\", \"G\"], size: 300, label: \"ng\" },\n        { sets: [\"L\", \"G\"], size: 300, label: \"lg\" },\n        { sets: [\"L\", \"P\"], size: 300, label: \"lp\" },\n        { sets: [\"N\", \"P\", \"L\"], size: 300, label: \"npl\" },\n        { sets: [\"N\", \"L\", \"G\"], size: 300, label: \"nlg\" },\n        { sets: [\"L\", \"G\", \"P\"], size: 300, label: \"lgp\" },\n        { sets: [\"N\", \"G\", \"P\"], size: 300, label: \"ngp\" },\n        { sets: [\"N\", \"G\", \"P\", \"L\"], size: 80, label: \"Ikigai\" }\n    ]);\n\n    useEffect(() => {\n        var colors = ['green', 'red', '#293972', '#E5C907'];\n\n        let chart = venn.VennDiagram();\n        d3.select(\"#venn\").datum(sets).call(chart);\n\n        d3.selectAll(\"#venn .venn-circle path\")\n        .style(\"fill-opacity\", 0)\n        .style(\"stroke-width\", 5)\n        .style(\"stroke-opacity\", .5)\n        .style(\"stroke\", function(d,i) { return colors[i]; });\n\n        d3.selectAll(\"#venn .venn-circle text\")\n        .style(\"fill\", function(d,i) { return colors[i]})\n        .style(\"font-size\", \"24px\")\n        .style(\"font-weight\", \"100\");\n    }, [sets]);\n    \n    return ( \n        <>\n            {/* <div className={props.id}>\n                <div className=\"circle-container\" style={{border: props.border}}>\n                    <span className=\"title-container\" style={{color: props.headingColor}}>\n                        {props.heading1}<br></br><strong>{props.heading2}</strong>\n                    </span>\n                    \n                    <div className=\"pills-location\">\n                        <Container className=\"pill-container\">\n                            {notes.map((element) => <Note key={element.id.toString()} intext={element.intext} id={element.id} deleteNote={deleteNote}></Note>)}\n                        </Container>\n\n                        <Container>\n                            <Form.Control className='form rounded-pill' value={text} onChange={handleChange} onBlur={handleAdd} onKeyPress={handleKeyPress} placeholder=\"Type here...\"/>\n                        </Container>\n                    </div>\n                </div>\n            </div> */}\n            <div id=\"venn\" style={{ textAlign: \"center\" }}></div>\n        </>\n    );\n}\n\nexport default Circle;","/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/components/Rectangle.js",[],"/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/components/info.js",[],"/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/components/trash.js",[],"/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/Page5.js",["58","59","60","61"],"import React from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './style.css';\n\nimport logo from './images/logo.png'; \nimport Circle from './components/Circle.js'; \n\nimport { v4 } from 'uuid';\n\nconst cir1 = [\n    { id: v4(), intext: ['hello i am a first note']},\n];\n\nconst cir2 = [\n    { id: v4(), intext: ['hello i am a second note']},\n];\n\nconst cir3 = [\n    { id: v4(), intext: ['hello i am a first note']},\n];\n\nconst cir4 = [\n    { id: v4(), intext: ['hello i am a first note']},\n];\n  \nconst circleItems = {\n    [v4()]: {\n        id: \"c1\",\n        heading1: \"What the world\",\n        heading2: \"NEEDS\",\n        headingColor: '#283972',\n        color: '#E1E5FF',\n        border: '10px solid #293972',\n        items: []\n    },\n    [v4()]: {\n        id: \"c2\",\n        heading1: \"What you\",\n        heading2: \"LOVE\",\n        headingColor: '#009F6F',\n        color: '#CCFFF0',\n        border: '10px solid #009F6F',\n        items: []\n    },\n    [v4()]: {\n        id: \"c3\",\n        heading1: \"What you are\",\n        heading2: \"GOOD AT\",\n        headingColor: '#FF5B5B',\n        color: '#FFE4E4',\n        border: '10px solid #FF5C5B',\n        items: []\n    },\n    [v4()]: {\n        id: \"c4\",\n        heading1: \"What You Can Be\",\n        heading2: \"PAID FOR\",\n        headingColor: '#E5C908',\n        color: '#FFFCCC',\n        border: '10px solid #E5C907',\n        items: []\n    }\n};\n\nconst Far = ()=> {\n    return ( \n        <>  \n            <section className=\"page-container-5\"> \n                <div className = \"main-header-text\">\n                    <p>Let’s find our ikigai! <br /> <br /> Start by adding activites or values you are currently doing into each of these four quadrants.\n                    <br /> Feel free to add as many as you can think of!\n                    </p> \n                </div>\n                <div className=\"main-logo\">\n                    <img src={logo} alt=\"cs-logo\" />\n                </div>\n                <div className=\"container circle\">\n                    {Object.entries(circleItems).map(([itemId, item], index) => {\n                        console.log(item);\n                        return (<Circle \n                            id = {item.id}\n                            data = {item} \n                            key = {itemId} \n                            heading1 = {item.heading1}\n                            heading2 = {item.heading2}\n                            color = {item.color} \n                            border = {item.border}\n                            headingColor = {item.headingColor}/>);\n                    })}\n                </div>\n            </section>\n        </>\n    );\n}\n \nexport default Far;","/Users/joiellantero/Documents/Career/Code for Asia/coding/Ikigai/src/Page4.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":2,"column":10,"nodeType":"68","messageId":"69","endLine":2,"endColumn":19},{"ruleId":"66","severity":1,"message":"70","line":2,"column":21,"nodeType":"68","messageId":"69","endLine":2,"endColumn":25},{"ruleId":"66","severity":1,"message":"71","line":2,"column":27,"nodeType":"68","messageId":"69","endLine":2,"endColumn":41},{"ruleId":"66","severity":1,"message":"72","line":2,"column":43,"nodeType":"68","messageId":"69","endLine":2,"endColumn":50},{"ruleId":"66","severity":1,"message":"73","line":8,"column":8,"nodeType":"68","messageId":"69","endLine":8,"endColumn":12},{"ruleId":"66","severity":1,"message":"74","line":18,"column":14,"nodeType":"68","messageId":"69","endLine":18,"endColumn":26},{"ruleId":"66","severity":1,"message":"75","line":22,"column":14,"nodeType":"68","messageId":"69","endLine":22,"endColumn":23},{"ruleId":"66","severity":1,"message":"76","line":40,"column":14,"nodeType":"68","messageId":"69","endLine":40,"endColumn":18},{"ruleId":"66","severity":1,"message":"77","line":69,"column":11,"nodeType":"68","messageId":"69","endLine":69,"endColumn":21},{"ruleId":"66","severity":1,"message":"78","line":73,"column":11,"nodeType":"68","messageId":"69","endLine":73,"endColumn":25},{"ruleId":"66","severity":1,"message":"79","line":86,"column":18,"nodeType":"68","messageId":"69","endLine":86,"endColumn":25},{"ruleId":"66","severity":1,"message":"80","line":11,"column":7,"nodeType":"68","messageId":"69","endLine":11,"endColumn":11},{"ruleId":"66","severity":1,"message":"81","line":15,"column":7,"nodeType":"68","messageId":"69","endLine":15,"endColumn":11},{"ruleId":"66","severity":1,"message":"82","line":19,"column":7,"nodeType":"68","messageId":"69","endLine":19,"endColumn":11},{"ruleId":"66","severity":1,"message":"83","line":23,"column":7,"nodeType":"68","messageId":"69","endLine":23,"endColumn":11},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'OverlayTrigger' is defined but never used.","'Tooltip' is defined but never used.","'Info' is defined but never used.","'handleChange' is defined but never used.","'handleAdd' is defined but never used.","'Note' is defined but never used.","'deleteNote' is assigned a value but never used.","'handleKeyPress' is assigned a value but never used.","'setSets' is assigned a value but never used.","'cir1' is assigned a value but never used.","'cir2' is assigned a value but never used.","'cir3' is assigned a value but never used.","'cir4' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]