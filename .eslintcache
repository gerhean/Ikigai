[{"/Users/joiellantero/Documents/Career/Code for Asia/Ikigai/src/index.js":"1","/Users/joiellantero/Documents/Career/Code for Asia/Ikigai/src/Page1.js":"2","/Users/joiellantero/Documents/Career/Code for Asia/Ikigai/src/Page2.js":"3","/Users/joiellantero/Documents/Career/Code for Asia/Ikigai/src/Page3.js":"4","/Users/joiellantero/Documents/Career/Code for Asia/Ikigai/src/components/Rectangle.js":"5","/Users/joiellantero/Documents/Career/Code for Asia/Ikigai/src/components/trash.js":"6","/Users/joiellantero/Documents/Career/Code for Asia/Ikigai/src/components/info.js":"7","/Users/joiellantero/Documents/Career/Code for Asia/Ikigai/src/components/Circle.js":"8","/Users/joiellantero/Documents/Career/Code for Asia/Ikigai/src/test.jsx":"9","/Users/joiellantero/Documents/Career/Code for Asia/Ikigai/src/Page4.js":"10","/Users/joiellantero/Documents/Career/Code for Asia/Ikigai/src/Page5.js":"11","/Users/joiellantero/Documents/Career/Code for Asia/Ikigai/src/old_files/circle.js":"12","/Users/joiellantero/Documents/Career/Code for Asia/Ikigai/src/Page5_test.js":"13"},{"size":913,"mtime":1610011622484,"results":"14","hashOfConfig":"15"},{"size":387,"mtime":1610011619504,"results":"16","hashOfConfig":"15"},{"size":1316,"mtime":1610011619503,"results":"17","hashOfConfig":"15"},{"size":1915,"mtime":1610011619504,"results":"18","hashOfConfig":"15"},{"size":4038,"mtime":1610011619501,"results":"19","hashOfConfig":"15"},{"size":732,"mtime":1609989816125,"results":"20","hashOfConfig":"15"},{"size":516,"mtime":1610011619501,"results":"21","hashOfConfig":"15"},{"size":4618,"mtime":1610011622483,"results":"22","hashOfConfig":"15"},{"size":3007,"mtime":1610011619506,"results":"23","hashOfConfig":"15"},{"size":13122,"mtime":1610011622480,"results":"24","hashOfConfig":"15"},{"size":6452,"mtime":1610011622482,"results":"25","hashOfConfig":"15"},{"size":2493,"mtime":1610011622485,"results":"26","hashOfConfig":"15"},{"size":3374,"mtime":1610011622465,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"17zhuk1",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/joiellantero/Documents/Career/Code for Asia/Ikigai/src/index.js",["58"],"/Users/joiellantero/Documents/Career/Code for Asia/Ikigai/src/Page1.js",[],["59","60"],"/Users/joiellantero/Documents/Career/Code for Asia/Ikigai/src/Page2.js",[],"/Users/joiellantero/Documents/Career/Code for Asia/Ikigai/src/Page3.js",[],"/Users/joiellantero/Documents/Career/Code for Asia/Ikigai/src/components/Rectangle.js",[],"/Users/joiellantero/Documents/Career/Code for Asia/Ikigai/src/components/trash.js",[],"/Users/joiellantero/Documents/Career/Code for Asia/Ikigai/src/components/info.js",[],"/Users/joiellantero/Documents/Career/Code for Asia/Ikigai/src/components/Circle.js",[],"/Users/joiellantero/Documents/Career/Code for Asia/Ikigai/src/test.jsx",[],"/Users/joiellantero/Documents/Career/Code for Asia/Ikigai/src/Page4.js",["61","62","63"],"import React, { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Button, Row, Col, Container, Form } from 'react-bootstrap';\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./style.css\";\n\nimport logo from \"./images/logo.png\";\nimport Rectangle from \"./components/Rectangle.js\";\nimport Circle from './old_files/circle.js';\n\nimport {EditText } from 'react-edit-text';\nimport Draggable from 'react-draggable';\nimport Trash from './components/trash';\n\nimport { v4 } from \"uuid\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\n\nconst dataColumns = {\n    [v4()]: {\n        id: \"c1\",\n        heading1: \"What the world\",\n        heading2: \"NEEDS\",\n        color: \"#E1E5FF\",\n        headingColor: \"#283972\",\n        items: [],\n        border: '10px solid #293972',\n        hover1: \"Stuck? Try these questions:\",\n        hover2: \"Are you helping to solve an actual problem?\",\n        hover3: \"Is what you’re doing bringing beauty or utility to others, helping out, and shaping the world around you?\"\n    },\n    [v4()]: {\n        id: \"c2\",\n        heading1: \"What you\",\n        heading2: \"LOVE\",\n        color: \"#CCFFF0\",\n        headingColor: \"#009F6F\",\n        items: [],\n        border: '10px solid #009F6F',\n        hover1: \"Stuck? Try these questions:\",\n        hover2: \"What are some activities truly enjoy doing about? Is there an activity or cause you enthusiastically talk about for hours on end?\",\n        hover3: \"If you weren’t concerned about money, what would you be doing?\"\n    },\n    [v4()]: {\n        id: \"c3\",\n        heading1: \"What you are\",\n        heading2: \"GOOD AT\",\n        color: \"#FFE4E4\",\n        headingColor: \"#FF5B5B\",\n        items: [],\n        border: '10px solid #FF5C5B',\n        hover1: \"Stuck? Try these questions:\",\n        hover2: \"Is there an activity that your friends/family/community have sought your advice/opinion on before?\",\n        hover3: \"Are you among the best in your workplace/community at this? With some more education and experience, could you master what you do?\"\n    },\n    [v4()]: {\n        id: \"c4\",\n        heading1: \"What You Can Be\",\n        heading2: \"PAID FOR\",\n        color: \"#FFFCCC\",\n        headingColor: \"#E5C908\",\n        items: [],\n        border: '10px solid #E5C907',\n        hover1: \"Stuck? Try these questions:\",\n        hover2: \"Lately, have you been paid for what you do? Have you ever been paid for what you do? If not, are other people being paid for this work?\",\n        hover3: \"Are you already making a good living doing what it is that you’re doing? Can you eventually make a good living doing this work? Are there other people who can do what you do, but better?\"\n    },\n};\n\n\nconst onDragEnd = (result, columns, setColumn) => {\n\n    if (!result.destination) {\n        return;\n    }\n\n    const { source, destination } = result;\n\n    if (source.droppableId !== destination.droppableId) {\n        const sourceColumn = columns[source.droppableId];\n        const destColumn = columns[destination.droppableId];\n        const sourceItems = [...sourceColumn.items];\n        const destItems = [...destColumn.items];\n        const [removed] = sourceItems.splice(source.index, 1);\n        destItems.splice(destination.index, 0, removed);\n        setColumn({\n            ...columns,\n            [source.droppableId]: {\n                ...sourceColumn,\n                items: sourceItems\n            },\n            [destination.droppableId]: {\n                ...destColumn,\n                items: destItems\n            }\n        });\n\n    } else {\n        const column = columns[source.droppableId];\n        const copiedItems = [...column.items];\n        const [removed] = copiedItems.splice(source.index, 1);\n        copiedItems.splice(destination.index, 0, removed);\n        setColumn({\n            ...columns,\n            [source.droppableId]: {\n                ...column,\n                items: copiedItems\n            }\n        });\n    }\n};\n\n\nconst Far = () => {\n    function Note(props) {\n        return (\n            <Draggable>\n            <div\n                variant = 'light'\n                className='circle rounded-pill with-btn-delete'\n                onMouseEnter={() => setIsShown(true)}\n            >\n                <span className=\"intext\">\n                    {props.intext}\n                </span>\n                \n                <EditText\n                    name={props.id}\n                    className=\"edit-text\"\n                    value={props.intext}\n                />\n    \n                {isShown && (\n                    <span className=\"btn-delete-container\">\n                        <Trash />\n                    </span>\n                )}\n            </div>\n            </Draggable>\n        );\n    }\n\n    function handleChange(event) {\n        setText(event.target.value);\n    }\n    \n    function handleAdd() {\n        if (!text){\n            return;\n        }\n        const newList = notes.concat(text);\n        setNote(newList);\n    \n        setText('');\n    }\n    \n    const handleKeyPress = (event) => {\n        if(event.key === 'Enter'){\n          if (!text){\n            return;\n        }\n    \n        const newList = notes.concat(text);\n        setNote(newList);\n    \n        setText('');\n        }\n    }\n\n    const [notes, setNote] = React.useState([]);\n    const [text, setText] = React.useState('');\n    const [isShown, setIsShown] = useState(false);\n\n\n    const [columns, setColumn] = useState(dataColumns);\n    const [showRec, setShowRec] = useState(true);\n    const [showVenn, setShowVenn] = useState(false);\n\n    const handleShowNext = () => {\n        setShowRec(false);\n        setShowVenn(true);\n    }\n\n    const handleShowBack = () => {\n        setShowRec(true);\n        setShowVenn(false);\n    }\n\n    return (\n        <>\n            <div className=\"main-logo\">\n                <img src={logo} alt=\"cs-logo\" />\n            </div>\n            {showRec && (\n                <div className=\"page-container-4\">\n                    <div className=\"btn-back\">\n                        <Link to=\"/what-is-ikigai\">\n                            <Button variant=\"light\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"icon icon-tabler icon-tabler-arrow-left\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"#1A1A1A\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                                    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                                    <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\" />\n                                    <line x1=\"5\" y1=\"12\" x2=\"11\" y2=\"18\" />\n                                    <line x1=\"5\" y1=\"12\" x2=\"11\" y2=\"6\" />\n                                </svg>\n                            </Button>\n                        </Link>\n                    </div>\n                    <DragDropContext onDragEnd={result => onDragEnd(result, columns, setColumn)}>\n                        <div className=\"main-header-text\">\n                            <p>\n                                Let’s find our ikigai!\n                                <br /> <br />\n                                Start by adding activites or values you are currently doing into each of these four quadrants.\n                                <br />\n                                Feel free to add as many as you can think of!\n                            </p>\n                        </div>\n                        <div className='rec-container'>\n                            {Object.entries(columns).map(([columnId, column]) => {\n                                return (\n                                    <Rectangle\n                                        key={columnId}\n                                        id={columnId}\n                                        col={column}\n                                        columns={columns}\n                                        handleColumn={setColumn}>\n                                    </Rectangle>\n                                );\n                            })}\n                        </div>\n                        <div className=\"btn-container center\">\n                            <button type=\"button\" className=\"btn-default btn-2 btn-lg\" onClick={handleShowNext}>\n                                Next\n                            </button>\n                        </div>\n                    </DragDropContext>\n                </div>\n            )}\n\n            {showVenn && (\n                <>\n                    <section className=\"page-container-5\">\n                        <div className=\"btn-back\">\n                            <Button variant=\"light\" onClick={handleShowBack}>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"icon icon-tabler icon-tabler-arrow-left\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"#1A1A1A\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                                    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                                    <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\" />\n                                    <line x1=\"5\" y1=\"12\" x2=\"11\" y2=\"18\" />\n                                    <line x1=\"5\" y1=\"12\" x2=\"11\" y2=\"6\" />\n                                </svg>\n                            </Button>\n                        </div>\n                        <div className=\"main-header-text\">\n                            <p>Introducing your ikigai chart.</p>\n                            <div className=\"instructions\">\n                                <p>For each of these activities or valeus, ask yourself the following questions again:</p>\n                                <p>Can I Be Paid? (If yes, move to yellow circle)</p>\n                                <p>Do I love this? (If yes, move to green circle)</p>\n                                <p>Am I good at this? (If yes, move to red circle)</p>\n                                <p>Is this what the world needs? (If yes, move to blue circle)</p>\n                            </div>\n                        </div>\n                        <Row>\n                            <Col xs={9}>\n                                <div className=\"container circle\">\n                                    {Object.entries(columns).map(([columnId, column]) => {\n                                        return (\n                                            <Circle\n                                                key={columnId}\n                                                id={column.id}\n                                                col={column}\n                                                columns={columns}\n                                                items={columns.items}\n                                                handleColumn={setColumn}\n                                                border={column.border}\n                                                headingColor={column.headingColor}\n                                                heading1={column.heading1}\n                                                heading2={column.heading2}\n                                            />\n                                        ); \n                                    })}\n                                </div>\n                            </Col>\n                            <Col xs={2} className=\"container circle-add\">\n                                <Container>\n                                    <div className=\"pills-location\">\n                                    <Form.Control className='form rounded-pill' value={text} onChange={handleChange} onBlur={handleAdd} onKeyPress={handleKeyPress} placeholder=\"Add activity\"/>\n                                    \n                                    <Container className=\"pill-container\">\n                                        {notes.map((element, index) => <Note key={index} intext={element}></Note>)}\n                                    </Container>\n                                    </div>\n                                </Container>\n                            </Col>\n                        </Row>\n                    </section>\n                    <div className=\"btn-container center pull-to-buttom\">\n                        <Link to=\"/export\">\n                            <button type=\"button\" className=\"btn-default btn-2 btn-lg\">\n                                Next\n                            </button>\n                        </Link>\n                    </div>\n                </>\n            )}\n        </>\n    );\n};\n\nexport default Far;\n","/Users/joiellantero/Documents/Career/Code for Asia/Ikigai/src/Page5.js",["64"],"import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { InputGroup, Button, FormControl} from 'react-bootstrap';\n\nimport Twitter from './components/Twitter';\nimport Facebook from './components/Facebook';\nimport Linkedin from './components/Linkedin';\nimport Whatsapp from './components/Whatsapp';\nimport Trash from './components/trash';\nimport Add from './components/Add';\n\nclass Page6 extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            newItem: \"\",\n            list: []\n        }\n    }\n\n    addItem() {\n        // create item with unique id\n        const newItem = {\n            id: 1 + Math.random(),\n            value: this.state.newItem.slice()\n        };\n\n        const list = [...this.state.list];\n\n        list.push(newItem);\n\n        this.setState({\n            list,\n            newItem:\"\"\n        })\n    }\n\n    deleteItem(id){\n        const list = [...this.state.list];\n        const updatedList = list.filter(item => item.id !== id);\n        this.setState({list:updatedList});\n    }\n\n    handleInputChange = (key, value) => {\n        this.setState({\n            [key]: value\n        });\n    }\n\n    render(){\n        return (\n            <>\n                <div className=\"page-container-6 container\">\n                    <div className=\"btn-back\">\n                        <Link to=\"/lets-find-out-ikigai\">\n                            <Button variant=\"light\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-arrow-left\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"#1A1A1A\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                                    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                                    <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\" />\n                                    <line x1=\"5\" y1=\"12\" x2=\"11\" y2=\"18\" />\n                                    <line x1=\"5\" y1=\"12\" x2=\"11\" y2=\"6\" />\n                                </svg>\n                            </Button>\n                        </Link>\n                    </div>\n                    <h3>Your Ikigai, Visualised.</h3>\n                    <div className=\"row my-5\">\n                        <div className=\"col-lg\">\n                            <p>***Venn Diagram Here***</p>\n                        </div>\n                        <div className=\"col-lg\">\n                            <p>Your steps to achieving ikigai</p>\n                            <div className=\"steps-container container\">\n                                <ul>\n                                    {this.state.list.map(item => {\n                                        return(\n                                            <li key={item.id}>\n                                                {item.value}\n                                                <button className=\"btn-delete\" onClick={() => this.deleteItem(item.id)}><Trash /></button>\n                                            </li>\n                                        )\n                                    })}\n                                </ul>\n                                <InputGroup>\n                                    <FormControl\n                                        placeholder=\"Enter step...\"\n                                        aria-label=\"Enter step...\"\n                                        aria-describedby=\"basic-addon2\"\n                                        className=\"steps-input\"\n                                        name=\"step\"\n                                        value={this.state.newItem}\n                                        onChange={e => this.handleInputChange(\"newItem\", e.target.value)}\n                                        onKeyPress={e => e.key === \"Enter\" && this.addItem()}\n                                    />\n                                    <InputGroup.Append>\n                                        <Button className=\"btn-add\" onClick={() => this.addItem()} disabled={!this.state.newItem}><Add /></Button>\n                                    </InputGroup.Append>\n                                </InputGroup>\n                            </div>\n                        </div>\n                    </div>\n\n                    <button type=\"button\" className=\"btn-default btn-2 btn-lg my-5\">\n                        Export Report\n                    </button>\n\n                    <div class=\"card card-shadow mt-5\">\n                        <div class=\"card-body\">\n                            <div className=\"share-container container\">\n                                <p>Share:</p>\n                                <ul>\n                                    <li className=\"hvr-float\"><a href=\"https://twitter.com/\" target=\"__blank\"><Twitter /></a></li>\n                                    <li className=\"hvr-float\"><a href=\"https://facebook.com/\" target=\"__blank\"><Facebook /></a></li>\n                                    <li className=\"hvr-float\"><a href=\"https://linkedin.com/\" target=\"__blank\"><Linkedin /></a></li>\n                                    <li className=\"hvr-float\"><a href=\"https://whatsapp.com/\" target=\"__blank\"><Whatsapp /></a></li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"container mt-5\">\n                        <p>\n                            Achieving Ikigai is a challenging process.<br />\n                            Your pursuit of Ikigai should draw you closer to a particular cause, skill, or people networks.<br /><br />\n\n                            All the best in your pursuit of ikigai!\n                        </p>\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default Page6;","/Users/joiellantero/Documents/Career/Code for Asia/Ikigai/src/old_files/circle.js",["65","66","67","68","69","70","71","72"],"import React, { useState } from 'react';\nimport { Container, Form, OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport { v4 } from 'uuid';\nimport Trash from '../components/trash.js';\nimport Info from '../components/info.js';\nimport {EditText } from 'react-edit-text';\nimport Draggable from 'react-draggable';\n\n//const initialNotes = [{id: v4(), intext:'hello'}, {id: v4(), intext:'this'}, {id: v4(), intext:'is'}, {id: v4(), intext:'a'}, {id: v4(), intext:'note'}]\n\nconst Circle = (props)=> {\n    const [notes, setNote] = React.useState(props.col.items);\n    const [text, setText] = React.useState('');\n\n    const [isShown, setIsShown] = useState(false);\n\n    function handleChange(event) {\n        setText(event.target.value);\n    }\n\n    function Note(props) {\n        return (\n            <Draggable>\n            <div\n                variant = 'light'\n                className='circle rounded-pill with-btn-delete'\n                onMouseEnter={() => setIsShown(true)}\n            >\n                <span className=\"intext\">\n                    {props.intext}\n                </span>\n                \n                <EditText\n                    name={props.id}\n                    className=\"edit-text\"\n                    value={props.intext}\n                />\n    \n                {isShown && (\n                    <span className=\"btn-delete-container\">\n                        <Trash />\n                    </span>\n                )}\n            </div>\n            </Draggable>\n        );\n    }\n\n    const handleKeyPress = (event) => {\n        if(event.key === 'Enter'){\n          if (!text){\n            return;\n        }\n\n        const newList = notes.concat({ intext: text, id: v4()});\n\n        setText('');\n        }\n    }\n\n    return (\n        <>\n            <div className={props.id}>\n                <div className=\"circle-container\" style={{border: props.border}}>\n                    <span className=\"title-container\" style={{color: props.headingColor}}>\n                        {props.heading1}<br></br><strong>{props.heading2}</strong>\n                    </span>\n\n                    <div className=\"pills-location\">\n                        <Container className=\"pill-container\">\n                            {notes.map((element) => <Note key={element.id.toString()} intext={element.intext} id={element.id}></Note>)}\n                        </Container>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Circle;\n","/Users/joiellantero/Documents/Career/Code for Asia/Ikigai/src/Page5_test.js",["73","74","75","76","77"],{"ruleId":null,"fatal":true,"severity":2,"message":"78","line":9,"column":2},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":27,"nodeType":"85","messageId":"86","endLine":1,"endColumn":33},{"ruleId":"83","severity":1,"message":"87","line":7,"column":10,"nodeType":"85","messageId":"86","endLine":7,"endColumn":16},{"ruleId":"83","severity":1,"message":"88","line":8,"column":10,"nodeType":"85","messageId":"86","endLine":8,"endColumn":25},{"ruleId":"83","severity":1,"message":"89","line":13,"column":8,"nodeType":"85","messageId":"86","endLine":13,"endColumn":11},{"ruleId":"83","severity":1,"message":"90","line":2,"column":21,"nodeType":"85","messageId":"86","endLine":2,"endColumn":25},{"ruleId":"83","severity":1,"message":"91","line":2,"column":27,"nodeType":"85","messageId":"86","endLine":2,"endColumn":41},{"ruleId":"83","severity":1,"message":"92","line":2,"column":43,"nodeType":"85","messageId":"86","endLine":2,"endColumn":50},{"ruleId":"83","severity":1,"message":"93","line":5,"column":8,"nodeType":"85","messageId":"86","endLine":5,"endColumn":12},{"ruleId":"83","severity":1,"message":"94","line":12,"column":19,"nodeType":"85","messageId":"86","endLine":12,"endColumn":26},{"ruleId":"83","severity":1,"message":"95","line":17,"column":14,"nodeType":"85","messageId":"86","endLine":17,"endColumn":26},{"ruleId":"83","severity":1,"message":"96","line":49,"column":11,"nodeType":"85","messageId":"86","endLine":49,"endColumn":25},{"ruleId":"83","severity":1,"message":"97","line":55,"column":15,"nodeType":"85","messageId":"86","endLine":55,"endColumn":22},{"ruleId":"83","severity":1,"message":"98","line":2,"column":10,"nodeType":"85","messageId":"86","endLine":2,"endColumn":14},{"ruleId":"83","severity":1,"message":"99","line":13,"column":7,"nodeType":"85","messageId":"86","endLine":13,"endColumn":11},{"ruleId":"83","severity":1,"message":"100","line":17,"column":7,"nodeType":"85","messageId":"86","endLine":17,"endColumn":11},{"ruleId":"83","severity":1,"message":"101","line":21,"column":7,"nodeType":"85","messageId":"86","endLine":21,"endColumn":11},{"ruleId":"83","severity":1,"message":"102","line":25,"column":7,"nodeType":"85","messageId":"86","endLine":25,"endColumn":11},"Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  7 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[33mPage2\u001b[39m from \u001b[32m\"./Page2\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  8 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[33mPage3\u001b[39m from \u001b[32m\"./Page3\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  9 | \u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mUpdated\u001b[39m upstream\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[33mPage4\u001b[39m from \u001b[32m\"./test\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 11 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[33mPage5\u001b[39m from \u001b[32m\"./Page5\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 | \u001b[39m\u001b[33m===\u001b[39m\u001b[33m===\u001b[39m\u001b[33m=\u001b[39m\u001b[0m","no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'render' is defined but never used.","'useReactToPrint' is defined but never used.","'Far' is defined but never used.","'Form' is defined but never used.","'OverlayTrigger' is defined but never used.","'Tooltip' is defined but never used.","'Info' is defined but never used.","'setNote' is assigned a value but never used.","'handleChange' is defined but never used.","'handleKeyPress' is assigned a value but never used.","'newList' is assigned a value but never used.","'Link' is defined but never used.","'cir1' is assigned a value but never used.","'cir2' is assigned a value but never used.","'cir3' is assigned a value but never used.","'cir4' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]