{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nasirkhalid/first/src/test.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { Container, Card, ListGroup, Button } from 'react-bootstrap';\n\nfunction Note(props) {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [props.intext, /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Note;\nconst initialNotes = [{\n  intext: 'hello i am a first note'\n}, {\n  intext: 'i am the second one'\n}, {\n  intext: 'i third'\n}, {\n  intext: 'yeehawww'\n}];\n\nconst Far = () => {\n  _s();\n\n  const [notes, setNote] = React.useState(initialNotes);\n  const [text, setText] = React.useState('');\n\n  function handleChange(event) {\n    setText(event.target.value);\n  }\n\n  function handleAdd() {\n    const newList = notes.concat({\n      intext: text\n    });\n    setNote(newList);\n    setText('');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        bg: 'info',\n        style: {\n          width: '18rem'\n        },\n        className: \"rounded-0 mb-2 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: [\"What the world \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"NEEDS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: text,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleAdd,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: notes.map((element, id) => /*#__PURE__*/_jsxDEV(Note, {\n                intext: element.intext,\n                id: id\n              }, id.toString(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Far, \"03SoYSCFvbKOqNFpDPBeVTvUjOU=\");\n\n_c2 = Far;\nexport default Far;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Note\");\n$RefreshReg$(_c2, \"Far\");","map":{"version":3,"sources":["/Users/nasirkhalid/first/src/test.jsx"],"names":["React","Component","Container","Card","ListGroup","Button","Note","props","intext","initialNotes","Far","notes","setNote","useState","text","setText","handleChange","event","target","value","handleAdd","newList","concat","width","map","element","id","toString"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Card, ListGroup, Button} from 'react-bootstrap';\n\nfunction Note(props) {\n    return <li>{props.intext}\n    <button type=\"button\">\n    <b>X</b>\n    </button>\n    </li>\n  }\n\nconst initialNotes = [\n    {intext : 'hello i am a first note'},\n    {intext : 'i am the second one'},\n    {intext : 'i third'},\n    {intext : 'yeehawww'}    \n]\n\nconst Far = ()=> {\n    const [notes, setNote] = React.useState(initialNotes);\n    const [text, setText] = React.useState('');\n\n    function handleChange(event) {\n        setText(event.target.value);\n      }\n\n    function handleAdd() {\n        const newList = notes.concat({ intext: text});\n        setNote(newList);\n     \n        setText('');      \n    }\n\n    return ( \n    <div>\n        <Container fluid>\n        <Card\n            bg={'info'}\n            style={{ width: '18rem' }}\n            className='rounded-0 mb-2 text-center'\n        >\n        <Card.Header>What the world <br></br><b>NEEDS</b></Card.Header>\n        <div>\n        <input type=\"text\" value={text} onChange={handleChange} />\n        <button type=\"button\" onClick={handleAdd}>\n          Add\n        </button>\n        </div>\n        \n        <Card.Body>\n        <Card.Text>\n        <ul>\n            {notes.map((element, id) => <Note key = {id.toString()} intext ={element.intext} id = {id}></Note>)}\n        </ul>\n\n        </Card.Text>\n        </Card.Body>\n        </Card>\n        </Container>\n    </div>\n    );\n}\n \nexport default Far;"]},"metadata":{},"sourceType":"module"}